stages:
  - build
  - test
  - deploy

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_DRIVER: "overlay2"

build:
  stage: build
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  script:
    - docker build -t my-app ."
    - docker save -o my-app.tar my-app
  artifacts:
    paths:
      - my-app.tar

test:
  stage: test
  image: alpine:latest
  script:
    - echo "Running tests..."

deploy:
  stage: deploy
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  dependencies:
    - build
  script:
    - docker load -i my-app.tar"
    - docker run -d --name my-app-container my-app

deploy_test:
  stage: deploy_test
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  dependencies:
    - build
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_TEST" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - docker load -i my-app.tar
    - docker tag $DOCKER_IMAGE $DOCKER_IMAGE
    - docker push $DOCKER_IMAGE
    - ssh user@$TEST_SERVER_IP "docker pull $DOCKER_IMAGE && docker rm -f my-app-container || true && docker run -d --name my-app-container -p 8080:8080 $DOCKER_IMAGE"